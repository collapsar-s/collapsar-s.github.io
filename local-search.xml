<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>JavaSE</title>
    <link href="/2025/08/23/JavaSE/"/>
    <url>/2025/08/23/JavaSE/</url>
    
    <content type="html"><![CDATA[<h1 id="JavaSE-基础学习"><a href="#JavaSE-基础学习" class="headerlink" title="JavaSE 基础学习"></a>JavaSE 基础学习</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ol><li>Java 入门</li><li>基础语法</li><li>面向对象编程</li><li>常用类库</li><li>异常处理</li><li>集合框架</li><li>I&#x2F;O 流</li><li>多线程</li><li>JDBC 数据库编程</li><li>综合练习</li></ol><hr><h2 id="1-Java-入门"><a href="#1-Java-入门" class="headerlink" title="1. Java 入门"></a>1. Java 入门</h2><h3 id="1-1-Java-简介"><a href="#1-1-Java-简介" class="headerlink" title="1.1 Java 简介"></a>1.1 Java 简介</h3><ul><li>Java 是一种 <strong>跨平台</strong>、<strong>面向对象</strong> 的编程语言。</li><li>“一次编写，到处运行”（Write Once, Run Anywhere）。</li></ul><h3 id="1-2-JDK、JRE、JVM"><a href="#1-2-JDK、JRE、JVM" class="headerlink" title="1.2 JDK、JRE、JVM"></a>1.2 JDK、JRE、JVM</h3><ul><li><strong>JDK</strong>：Java Development Kit，开发工具包。</li><li><strong>JRE</strong>：Java Runtime Environment，运行环境。</li><li><strong>JVM</strong>：Java Virtual Machine，Java 程序运行的虚拟机。</li></ul><h3 id="1-3-Hello-World-程序"><a href="#1-3-Hello-World-程序" class="headerlink" title="1.3 Hello World 程序"></a>1.3 Hello World 程序</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">HelloWorld</span> &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(<span class="hljs-params">String[] <span class="hljs-keyword">args</span></span>)</span> &#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;Hello, World!&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="2-基础语法"><a href="#2-基础语法" class="headerlink" title="2. 基础语法"></a>2. 基础语法</h2><h3 id="2-1-数据类型"><a href="#2-1-数据类型" class="headerlink" title="2.1 数据类型"></a>2.1 数据类型</h3><ul><li><p>基本类型</p><p>：</p><ul><li>整型：<code>byte</code>、<code>short</code>、<code>int</code>、<code>long</code></li><li>浮点型：<code>float</code>、<code>double</code></li><li>字符型：<code>char</code></li><li>布尔型：<code>boolean</code></li></ul></li><li><p><strong>引用类型</strong>：类、接口、数组</p></li></ul><h3 id="2-2-变量与常量"><a href="#2-2-变量与常量" class="headerlink" title="2.2 变量与常量"></a>2.2 变量与常量</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">int age <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-comment">;</span><br>final double PI <span class="hljs-operator">=</span> <span class="hljs-number">3.14159</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h3 id="2-3-运算符"><a href="#2-3-运算符" class="headerlink" title="2.3 运算符"></a>2.3 运算符</h3><ul><li>算术运算符：<code>+ - * / %</code></li><li>逻辑运算符：<code>&amp;&amp; || !</code></li><li>关系运算符：<code>== != &gt; &lt; &gt;= &lt;=</code></li></ul><h3 id="2-4-控制语句"><a href="#2-4-控制语句" class="headerlink" title="2.4 控制语句"></a>2.4 控制语句</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">// 条件判断<br><span class="hljs-keyword">if</span> (age &gt; <span class="hljs-number">18</span>) &#123;<br>    <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(&quot;成年人&quot;);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(&quot;未成年人&quot;);<br>&#125;<br><br>// 循环<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) &#123;<br>    <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="3-面向对象编程"><a href="#3-面向对象编程" class="headerlink" title="3. 面向对象编程"></a>3. 面向对象编程</h2><h3 id="3-1-类与对象"><a href="#3-1-类与对象" class="headerlink" title="3.1 类与对象"></a>3.1 类与对象</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">class</span> <span class="hljs-title">Student</span> &#123;<br>    String name;<br>    <span class="hljs-built_in">int</span> age;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">study</span>()</span> &#123;<br>        System.<span class="hljs-keyword">out</span>.println(name + <span class="hljs-string">&quot; 正在学习&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(<span class="hljs-params">String[] <span class="hljs-keyword">args</span></span>)</span> &#123;<br>        Student s = <span class="hljs-keyword">new</span> Student();<br>        s.name = <span class="hljs-string">&quot;小明&quot;</span>;<br>        s.age = <span class="hljs-number">20</span>;<br>        s.study();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-2-封装、继承、多态"><a href="#3-2-封装、继承、多态" class="headerlink" title="3.2 封装、继承、多态"></a>3.2 封装、继承、多态</h3><ul><li><strong>封装</strong>：隐藏内部细节，对外提供接口。</li><li><strong>继承</strong>：子类继承父类。</li><li><strong>多态</strong>：同一方法，不同表现。</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">sound</span>()</span> &#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;动物叫&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title">Dog</span> <span class="hljs-title">extends</span> <span class="hljs-title">Animal</span> &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">sound</span>()</span> &#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;汪汪汪&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(<span class="hljs-params">String[] <span class="hljs-keyword">args</span></span>)</span> &#123;<br>        Animal a = <span class="hljs-keyword">new</span> Dog();<br>        a.sound();  <span class="hljs-comment">// 输出：汪汪汪</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-3-接口与抽象类"><a href="#3-3-接口与抽象类" class="headerlink" title="3.3 接口与抽象类"></a>3.3 接口与抽象类</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">interface</span> <span class="hljs-title">USB</span> &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">start</span>()</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">stop</span>()</span>;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title">Mouse</span> <span class="hljs-title">implements</span> <span class="hljs-title">USB</span> &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">start</span>()</span> &#123; System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;鼠标启动&quot;</span>); &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">stop</span>()</span> &#123; System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;鼠标关闭&quot;</span>); &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="4-常用类库"><a href="#4-常用类库" class="headerlink" title="4. 常用类库"></a>4. 常用类库</h2><h3 id="4-1-字符串操作"><a href="#4-1-字符串操作" class="headerlink" title="4.1 字符串操作"></a>4.1 字符串操作</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">String <span class="hljs-built_in">s1</span> = <span class="hljs-string">&quot;Hello&quot;</span>;<br>String <span class="hljs-built_in">s2</span> = <span class="hljs-string">&quot;World&quot;</span>;<br>System.out.println(<span class="hljs-built_in">s1</span> + <span class="hljs-string">&quot; &quot;</span> + <span class="hljs-built_in">s2</span>)<span class="hljs-comment">; // Hello World</span><br>System.out.println(<span class="hljs-built_in">s1</span>.length())<span class="hljs-comment">;   // 5</span><br></code></pre></td></tr></table></figure><h3 id="4-2-Math-类"><a href="#4-2-Math-类" class="headerlink" title="4.2 Math 类"></a>4.2 Math 类</h3><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs glsl">System.<span class="hljs-keyword">out</span>.println(Math.<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>));  <span class="hljs-comment">// 8</span><br>System.<span class="hljs-keyword">out</span>.println(Math.<span class="hljs-built_in">sqrt</span>(<span class="hljs-number">16</span>));   <span class="hljs-comment">// 4</span><br></code></pre></td></tr></table></figure><h3 id="4-3-日期与时间"><a href="#4-3-日期与时间" class="headerlink" title="4.3 日期与时间"></a>4.3 日期与时间</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> java.util.Date;<br><br><span class="hljs-type">Date</span> d = <span class="hljs-built_in">new</span> <span class="hljs-type">Date</span>();<br><span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(d);<br></code></pre></td></tr></table></figure><hr><h2 id="5-异常处理"><a href="#5-异常处理" class="headerlink" title="5. 异常处理"></a>5. 异常处理</h2><h3 id="5-1-try-catch"><a href="#5-1-try-catch" class="headerlink" title="5.1 try-catch"></a>5.1 try-catch</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-built_in">int</span> x = <span class="hljs-number">10</span> / <span class="hljs-number">0</span>;<br>&#125; <span class="hljs-keyword">catch</span> (ArithmeticException e) &#123;<br>    System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;除数不能为0&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5-2-throw-与-throws"><a href="#5-2-throw-与-throws" class="headerlink" title="5.2 throw 与 throws"></a>5.2 throw 与 throws</h3><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs aspectj"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">checkAge</span><span class="hljs-params">(<span class="hljs-keyword">int</span> age)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>    <span class="hljs-keyword">if</span> (age &lt; <span class="hljs-number">18</span>) <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-string">&quot;未成年&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="6-集合框架"><a href="#6-集合框架" class="headerlink" title="6. 集合框架"></a>6. 集合框架</h2><h3 id="6-1-List"><a href="#6-1-List" class="headerlink" title="6.1 List"></a>6.1 List</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs abnf">import java.util.*<span class="hljs-comment">;</span><br><br>List&lt;String&gt; list <span class="hljs-operator">=</span> new ArrayList&lt;&gt;()<span class="hljs-comment">;</span><br>list.add(<span class="hljs-string">&quot;A&quot;</span>)<span class="hljs-comment">;</span><br>list.add(<span class="hljs-string">&quot;B&quot;</span>)<span class="hljs-comment">;</span><br>System.out.println(list)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h3 id="6-2-Map"><a href="#6-2-Map" class="headerlink" title="6.2 Map"></a>6.2 Map</h3><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vhdl"><span class="hljs-keyword">Map</span>&lt;<span class="hljs-built_in">String</span>, <span class="hljs-built_in">Integer</span>&gt; <span class="hljs-keyword">map</span> = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<br><span class="hljs-keyword">map</span>.put(<span class="hljs-string">&quot;Tom&quot;</span>, <span class="hljs-number">20</span>);<br><span class="hljs-keyword">map</span>.put(<span class="hljs-string">&quot;Jerry&quot;</span>, <span class="hljs-number">18</span>);<br>System.<span class="hljs-keyword">out</span>.println(<span class="hljs-keyword">map</span>.get(<span class="hljs-string">&quot;Tom&quot;</span>));<br></code></pre></td></tr></table></figure><hr><h2 id="7-I-O-流"><a href="#7-I-O-流" class="headerlink" title="7. I&#x2F;O 流"></a>7. I&#x2F;O 流</h2><h3 id="7-1-文件读写"><a href="#7-1-文件读写" class="headerlink" title="7.1 文件读写"></a>7.1 文件读写</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.*;<br><br><span class="hljs-keyword">try</span> (<span class="hljs-type">FileWriter</span> <span class="hljs-variable">fw</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileWriter</span>(<span class="hljs-string">&quot;test.txt&quot;</span>)) &#123;<br>    fw.write(<span class="hljs-string">&quot;Hello Java&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="7-2-文件读取"><a href="#7-2-文件读取" class="headerlink" title="7.2 文件读取"></a>7.2 文件读取</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">try (BufferedReader br = <span class="hljs-built_in">new</span> BufferedReader(<span class="hljs-built_in">new</span> FileReader(&quot;test.txt&quot;))) &#123;<br>    String <span class="hljs-type">line</span>;<br>    <span class="hljs-keyword">while</span> ((<span class="hljs-type">line</span> = br.readLine()) != <span class="hljs-keyword">null</span>) &#123;<br>        <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(<span class="hljs-type">line</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="8-多线程"><a href="#8-多线程" class="headerlink" title="8. 多线程"></a>8. 多线程</h2><h3 id="8-1-继承-Thread"><a href="#8-1-继承-Thread" class="headerlink" title="8.1 继承 Thread"></a>8.1 继承 Thread</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">class</span> <span class="hljs-title">MyThread</span> <span class="hljs-title">extends</span> <span class="hljs-title">Thread</span> &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span>()</span> &#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;线程运行中&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(<span class="hljs-params">String[] <span class="hljs-keyword">args</span></span>)</span> &#123;<br>        <span class="hljs-keyword">new</span> MyThread().start();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-2-实现-Runnable"><a href="#8-2-实现-Runnable" class="headerlink" title="8.2 实现 Runnable"></a>8.2 实现 Runnable</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyRunnable</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Runnable</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">run</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;实现 Runnable 的线程&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-title class_">String</span>[] args</span>) &#123;<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">MyRunnable</span>()).<span class="hljs-title function_">start</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="9-JDBC-数据库编程"><a href="#9-JDBC-数据库编程" class="headerlink" title="9. JDBC 数据库编程"></a>9. JDBC 数据库编程</h2><h3 id="9-1-基本步骤"><a href="#9-1-基本步骤" class="headerlink" title="9.1 基本步骤"></a>9.1 基本步骤</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.sql.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JDBCTest</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 1. 加载驱动</span><br>        Class.forName(<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>        <span class="hljs-comment">// 2. 建立连接</span><br>        <span class="hljs-type">Connection</span> <span class="hljs-variable">conn</span> <span class="hljs-operator">=</span> DriverManager.getConnection(<br>            <span class="hljs-string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>, <span class="hljs-string">&quot;root&quot;</span>, <span class="hljs-string">&quot;123456&quot;</span>);<br>        <span class="hljs-comment">// 3. 创建语句</span><br>        <span class="hljs-type">Statement</span> <span class="hljs-variable">stmt</span> <span class="hljs-operator">=</span> conn.createStatement();<br>        <span class="hljs-comment">// 4. 执行查询</span><br>        <span class="hljs-type">ResultSet</span> <span class="hljs-variable">rs</span> <span class="hljs-operator">=</span> stmt.executeQuery(<span class="hljs-string">&quot;SELECT * FROM student&quot;</span>);<br>        <span class="hljs-keyword">while</span> (rs.next()) &#123;<br>            System.out.println(rs.getString(<span class="hljs-string">&quot;name&quot;</span>));<br>        &#125;<br>        <span class="hljs-comment">// 5. 关闭连接</span><br>        rs.close();<br>        stmt.close();<br>        conn.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/08/23/hello-world/"/>
    <url>/2025/08/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
